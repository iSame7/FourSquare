//
//  TipsBuilder.swift
//  FourSquare
//
//  Created Sameh Mabrouk on 10/06/2019.
//  Copyright Â© 2019 VanMoof. All rights reserved.
//
//  Template generated by Sameh Mabrouk https://github.com/iSame7
//

import Swinject

class TipsBuilder: TipsBuilding {

    private let container: Container
    
    init(container: Container) {
        self.container = container
    }
    
    func buildModuleWith(tips: [TipItem], venuePhotoURL: String?) -> FourSquare.Module? {
        registerView(with: tips, venuePhotoURL: venuePhotoURL)
        registerMapURLHandler()
        registerRouter()
        registerPresenter()
        
        guard let detailsViewController = container.resolve(TipsViewable.self) as? UIViewController else { return nil }
        
        return FourSquare.Module(viewController: detailsViewController)
        
    }
    
    func registerView(with tips: [TipItem], venuePhotoURL: String?) {
        container.register(TipsViewable.self, factory: { _ in
            TipsViewController.instantiate()
        }).initCompleted({ (r, view) in
            if let tipsViewController = view as? TipsViewController {
                tipsViewController.presenter = r.resolve(TipsPresenting.self)!
                tipsViewController.update(with: TipsViewController.ViewModel(venuImageURL: venuePhotoURL, tips: tips, title: "Tips", description: ""))
            }
        }).inObjectScope(.container)
    }
    
    func registerMapURLHandler() {
        container.register(MapURLHandling.self, factory: { r in
            MapURLHandler()
        }).inObjectScope(.container)
    }
    func registerPresenter() {
        container.register(TipsPresenting.self, factory: { r in
            TipsPresenter(view: r.resolve(TipsViewable.self)!, router: r.resolve(TipsRouting.self)!)
        }).inObjectScope(.container)
    }
    
    func registerRouter() {
        container.register(TipsRouting.self, factory: { r in
            TipsRouter()
        }).inObjectScope(.container)
    }
}

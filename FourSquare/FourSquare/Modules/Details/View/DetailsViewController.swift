//
//  DetailsViewController.swift
//  FourSquare
//
//  Created Sameh Mabrouk on 25/05/2019.
//  Copyright Â© 2019 VanMoof. All rights reserved.
//
//  Template generated by Sameh Mabrouk https://github.com/iSame7
//

import UIKit

class DetailsViewController: UIViewController, DetailsViewable {
	var presenter: DetailsPresenting?
    var headerView: VenueUITableHeaderView?
    let screenWidth = UIScreen.main.bounds.width
    var viewModel: ViewModel?
    
    @IBOutlet weak var tableView: UITableView!
    
	override func viewDidLoad() {
        super.viewDidLoad()
        
        view.backgroundColor = .white
        setUpHeader()
        setUpTableView()
    }
    
    func setUpHeader() {
        headerView = VenueUITableHeaderView(frame: CGRect(x: 0, y: 0, width: screenWidth, height: screenWidth/2), backAction: { [weak self] in
            self?.presenter?.dismiss()
        })
        if let viewModel = viewModel, let category = viewModel.venue.categories.first {
            headerView?.configure(with: VenueUITableHeaderView.ViewModel(title: viewModel.venue.name, description: category.name, imageURL: viewModel.venuePhotoURL))
        }
    }
    
    func setUpTableView() {
        tableView.register(UITableViewCell.self, forCellReuseIdentifier: "cell")
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = 99
        tableView.contentInset  = UIEdgeInsets(top: screenWidth/2, left: 0, bottom: 0, right: 0)
        tableView.addSubview(headerView!)
        tableView.tableFooterView = UIView()
    }
    
    func presentMapActionSheet(venue: Venue) {
        let optionMenu = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        
        optionMenu.addAction(UIAlertAction(title: "Apple Maps", style: .default) { [weak self] _ in
            self?.presenter?.showMap(type: .apple, location: venue.location)
        })
        
        optionMenu.addAction(UIAlertAction(title: "Google Maps", style: .default) { [weak self] _ in
            self?.presenter?.showMap(type: .google, location: venue.location)
        })
        
        optionMenu.addAction(UIAlertAction(title: NSLocalizedString("Cancel", comment: "presentmaps.cancel"), style: .cancel))
        
        present(optionMenu, animated: true, completion: nil)
    }
}

// MARK: - StoryboardInstantiatable
extension DetailsViewController: StoryboardInstantiatable {
    static var storyboardName: String {
        return "MapViewController"
    }
    static var instantiateType: StoryboardInstantiateType {
        return .identifier("DetailsViewController")
    }
}

// MARK: - UIScrollViewDelegate
extension DetailsViewController: UIScrollViewDelegate {
    func scrollViewDidEndScrollingAnimation(_ scrollView: UIScrollView) {
//        self.tableView.reloadData()
    }
    
    
    func scrollViewDidScroll(_ scrollView: UIScrollView) {
        
        if headerView != nil {
            let yPos: CGFloat = -scrollView.contentOffset.y
            
            if yPos > 0 {
                var imgRect: CGRect? = headerView?.frame
                imgRect?.origin.y = scrollView.contentOffset.y
                imgRect?.size.height = screenWidth/2 + yPos  - screenWidth/2
                headerView?.frame = imgRect!
                self.tableView.sectionHeaderHeight = (imgRect?.size.height)!
                
            }
        }
    }
}

// MARK: - UITableViewDelegate
extension DetailsViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if indexPath.row == 2 {
            if let venue = viewModel?.venue {
                presentMapActionSheet(venue: venue)
                tableView.deselectRow(at: indexPath, animated: true)
            }
        }
    }
}

// MARK: - UITableViewDataSource
extension DetailsViewController: UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if indexPath.row == 0 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "RatingCell") as! RatingUITableViewCell
            cell.setup()
            return cell
        } else if indexPath.row == 1 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "AddressCell") as! AddressTableViewCell
            return cell
        } else if indexPath.row == 2 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "MapCell") as! MapTableViewCell
            return cell
        } else if indexPath.row == 3 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "PhotoGalleryCell") as! PhotoGalleryTableViewCell
            return cell
        } else if indexPath.row == 4 {
            let cell = tableView.dequeueReusableCell(withIdentifier: "TipsCell") as! TipsTableViewCell
            cell.setup(with: TipsTableViewCell.ViewModel(tips: [Int]())) { [weak self] in
                self?.presenter?.showTipsViewController(tips: [Tip(createdAt: "April 22, 2019", text: "This tiny little venue has tiny little prices for their delightful dumplings. The sesame pancakes are also great, and perfect to grab to-go on your way to picnic in the park, just a block west.", userName: "Bellamy")], venuePhotoURL: "")
            }
            return cell
        } else {
            let cell = tableView.dequeueReusableCell(withIdentifier: "cell")!
            cell.backgroundColor = .white
            return cell
        }
    }
}

extension DetailsViewController {
    struct ViewModel {
        let venue: Venue
        let venuePhotoURL: String?
    }
}
